{"version":3,"sources":["components/Form.js","components/ListItem.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputValue","todo","state","handleInput","e","target","name","value","setState","handleOnSubmit","preventDefault","props","onSubmit","this","console","log","type","id","onChange","required","React","Component","ListItem","onEdit","editVal","item","myRef","createRef","onRemove","current","className","setTimeout","handleDelete","handleEditValue","handleCancel","handleSave","handleEdit","title","onClick","ref","List","onDelete","count","map","index","App","data","handleSubmit","newVal","handleRemove","filter","i","handleOnEdit","forEach","localStorage","setItem","JSON","stringify","dataStore","parse","getItem","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ca73cf3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n      inputValue = {\r\n          todo: ''\r\n      };\r\n      state = this.inputValue;\r\n\r\n      handleInput = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n      };\r\n\r\n      handleOnSubmit = (e) => {\r\n          e.preventDefault();\r\n          this.props.onSubmit(this.state);\r\n          this.setState(this.inputValue);\r\n      }\r\n\r\n      render() {\r\n          const {todo} = this.state;\r\n          console.log(todo);\r\n            return (\r\n                  <form onSubmit={this.handleOnSubmit} >\r\n                        <input type=\"text\" \r\n                        name=\"todo\" \r\n                        id=\"todo\" \r\n                        value={this.state.todo}\r\n                        onChange = {this.handleInput} \r\n                        required />\r\n                        <button type=\"submit\">Create</button>\r\n                  </form>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\n\r\nclass ListItem extends React.Component{\r\n    state = {\r\n        onEdit: false,\r\n        editVal: this.props.item\r\n    };\r\n    myRef = React.createRef();\r\n\r\n    onRemove = () =>{\r\n        this.myRef.current.className=\"active\";\r\n        setTimeout(() =>{\r\n            this.props.handleDelete();\r\n        }, 200)\r\n\r\n    };\r\n\r\n    handleEditValue = (e) => {\r\n        e.preventDefault();\r\n        const{name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onEdit = () => {\r\n        this.setState({onEdit: true});\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const {editVal} = this.state;\r\n        if(editVal === ''){\r\n            this.setState({editVal: this.props.item});\r\n        }\r\n        this.setState({onEdit: false});\r\n    };\r\n\r\n    handleSave = () => {\r\n        const {editVal} = this.state;\r\n        if(editVal === ''){\r\n            this.setState({editVal: this.props.item});\r\n        }else{\r\n            this.props.handleEdit(editVal, this.props.id);\r\n        }\r\n        this.setState({onEdit:false})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n        if(this.state.onEdit) {\r\n            return(\r\n                <li>\r\n                    <input type=\"text\" \r\n                    value={this.state.editVal}\r\n                    name=\"editVal\" id=\"editVal\"\r\n                    onChange={this.handleEditValue}\r\n                    />\r\n                    <div className=\"row\">\r\n                        <i className=\"fa fa-save\" \r\n                        title=\"Save\"\r\n                        onClick={this.handleSave}\r\n                        />\r\n                        <i className=\"fa fa-times\" \r\n                        title=\"Cancel\"\r\n                        onClick={this.handleCancel}\r\n                        />\r\n    \r\n                    </div>\r\n                </li>\r\n            );\r\n        }else {\r\n            return(\r\n                <li ref={this.myRef} >{item}\r\n                    <div className=\"row\">\r\n                        <i className=\"fa fa-pencil\" \r\n                        title=\"Edit\"\r\n                        onClick={this.onEdit}\r\n\r\n                        />\r\n                        <i className=\"fa fa-trash\" \r\n                        title=\"Delete\"\r\n                        onClick={this.onRemove}\r\n                        />\r\n    \r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default ListItem;","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nclass List extends React.Component {\r\n\r\n      render() {\r\n        const { todo, onDelete, onEdit, count } = this.props;\r\n            return (\r\n                  <>\r\n                        <ul>\r\n                              {\r\n                              todo.map((item, index) => {\r\n                                    return <ListItem \r\n                                    item={item.todo} \r\n                                    key={index}\r\n                                    handleDelete = {() => {onDelete(index)}}\r\n                                    handleEdit = {onEdit}\r\n                                    id={index}\r\n                                    />;\r\n                              })\r\n                              }\r\n                        </ul>\r\n                        <h2>You have {count} things to do</h2>\r\n                  </>\r\n            );\r\n      }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\n\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nclass App extends React.Component {\n      state = {\n            data: []\n      };\n\n      handleSubmit = (newVal) => {\n            this.setState({ data: [...this.state.data, newVal] });\n      };\n//local Storage\n      componentDidUpdate(){\n            localStorage.setItem('dataStore', JSON.stringify(this.state.data));\n\n      }\n\n      componentDidMount() {\n            const dataStore = JSON.parse(localStorage.getItem('dataStore'));\n            if(dataStore !== null) {\n                  this.setState({data: dataStore});\n            }\n      }\n\n      handleRemove = (index) => {\n          const {data} = this.state;\n          this.setState({\n            data: data.filter((item, i) => {\n                return i !== index;\n            })\n          });\n      }\n\n      handleOnEdit = (editVal, index) =>{\n            const {data} = this.state;\n            data.forEach((item, i) =>{\n                  if(i === index){\n                        item.todo = editVal;\n                  }\n            });\n            this.setState({data: data});\n      }\n\n      render() {\n            const { data } = this.state;\n            return (\n                  <div className=\"app\">\n                        <Form onSubmit={this.handleSubmit} />\n                        <h1>To do list</h1>\n                        {data.length === 0 \n                        ? <h2>Nothings to do</h2>\n                        : <List todo={data} \n                        onDelete = {this.handleRemove}\n                        onEdit = {this.handleOnEdit}\n                        count = {data.length}\n                        />               \n                        }\n\n                  </div>\n            );\n      }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}